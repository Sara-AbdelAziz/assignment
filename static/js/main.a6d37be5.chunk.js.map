{"version":3,"sources":["components/Item.js","components/Category.js","components/Categories.js","components/App.js","serviceWorker.js","index.js"],"names":["Item","props","react_default","a","createElement","items","map","item","x","key","className","editing","type","value","name","onChange","e","onChangeItem","categoryId","onClick","onSaveItem","onEditItem","description","price","Category","categories","category","i","id","onChangeCategory","onSave","data-toggle","data-target","aria-expanded","aria-controls","onEdit","aria-labelledby","data-parent","components_Item","Categories","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","setState","currentCategory","target","handleSubmit","preventDefault","parentNode","querySelector","state","fetch","method","headers","Accept","Content-Type","body","JSON","stringify","Date","getTime","then","res","json","data","console","log","oldComments","concat","catch","err","handleEdit","editedCategories","filter","c","handleEditItem","handleSave","axios","put","response","handleSaveItem","handleChangeCategory","handleChangeItem","_this2","get","onSubmit","components_Category","Component","App","components_Categories","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a6d37be5.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Item = (props) => (\r\n \r\n <div>\r\n    {props.items.map((item,x) => <div key={x} >\r\n    <div className=\"row\">\r\n        <div className=\"col-lg-3\">Name:</div>\r\n        {item.editing? <div className=\"col-lg-9\"><input type=\"text\" className=\"width-70\" value={item.name} onChange={(e) => props.onChangeItem(e,item,\"name\",props.categoryId)}/>\r\n        <button className=\"sm-font float-end\" onClick={() => props.onSaveItem(item,props.categoryId)}>save</button></div> : \r\n        <div className=\"col-lg-9\">{item.name}<button onClick={() => props.onEditItem(item,props.categoryId)} className=\"sm-font float-end\">edit</button></div>}\r\n    </div>\r\n    <div className=\"row\">\r\n        <div className=\"col-lg-3\">Description:</div>\r\n        {item.editing? <div className=\"col-lg-9\"><input type=\"text\" className=\"width-70\" value={item.description} onChange={(e) => props.onChangeItem(e,item,\"description\",props.categoryId)}/>\r\n        <button className=\"sm-font none\" onClick={() => props.onSaveItem(item,props.categoryId)}>save</button></div> : \r\n        <div className=\"col-lg-9\">{item.description}<button onClick={() => props.onEditItem(item,props.categoryId)} className=\"sm-font none\">edit</button></div>}\r\n    </div>\r\n    <div className=\"row\">\r\n        <div className=\"col-lg-3\">Price:</div>\r\n        {item.editing? <div className=\"col-lg-9\"><input type=\"text\" className=\"width-70\" value={item.price} onChange={(e) => props.onChangeItem(e,item,\"price\",props.categoryId)}/>\r\n        <button className=\"sm-font none\" onClick={() => props.onSaveItem(item,props.categoryId)}>save</button></div> : \r\n        <div className=\"col-lg-9\">{item.price}<button onClick={() => props.onEditItem(item,props.categoryId)} className=\"sm-font none\">edit</button></div>}\r\n    </div>\r\n\r\n    \r\n    \r\n        <hr/>\r\n    </div>)}\r\n </div>\r\n);\r\n\r\nexport default Item;","import React from 'react';\r\nimport Item from './Item';\r\n\r\nconst Category = (props) => (\r\n \r\n <div>            \r\n     {props.categories.map((category,i) => <div key={i} className=\"card\">\r\n        <div className=\"card-header\"  id={'heading'+i}>\r\n            \r\n\r\n            {category.editing? <div><input type=\"text\" className=\"width-70\" value={category.name} onChange={(e) => props.onChangeCategory(e,category)}/><button className=\"sm-font float-end\" onClick={() => props.onSave(category)}>save</button></div> : <h2 className=\"mb-0\">\r\n            <button className=\"btn btn-link collapsed\" type=\"button\" data-toggle=\"collapse\" data-target={'#collapse'+i} aria-expanded=\"false\" aria-controls={'collapse'+i}>\r\n                {category.name}\r\n            </button>\r\n            <button onClick={() => props.onEdit(category)} className=\"sm-font float-end\">edit</button>\r\n            </h2>}\r\n\r\n            \r\n            \r\n\r\n        </div>\r\n\r\n        <div  id={'collapse'+i} className=\"collapse\" aria-labelledby=\"{'heading'+i}\" data-parent=\"#accordionExample\">\r\n            <div className=\"card-body\">\r\n                <Item items={category.items} \r\n                onEditItem={props.onEditItem} \r\n                onSaveItem={props.onSaveItem} \r\n                onChangeItem={props.onChangeItem}\r\n                 categoryId={category.id}/>\r\n            </div>\r\n        </div>\r\n      </div>)}\r\n    \r\n\r\n </div>\r\n);\r\n\r\nexport default Category;\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport Category from './Category';\r\nimport axios from 'axios';\r\n\r\n\r\nclass Categories extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            categories: [],\r\n            currentCategory:null,\r\n            \r\n            \r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        axios.get('https://my-json-server.typicode.com/Sara-AbdelAziz/data/categories')\r\n           .then(res => {\r\n            res.data.map(c => {\r\n                c.editing=false;\r\n                c.items.map(i => i.editing=false);\r\n            \r\n            });\r\n            this.setState({  categories: res.data});\r\n            \r\n          })\r\n          \r\n    }\r\n    handleChange = event => {\r\n        this.setState({ currentCategory: event.target.value });\r\n    }\r\n\r\n\r\n    handleSubmit = event => {       \r\n            event.preventDefault();\r\n            event.target.parentNode.querySelector('input').value=null;\r\n            if(this.state.currentCategory){\r\n                fetch('https://my-json-server.typicode.com/Sara-AbdelAziz/data/categories', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify({\r\n                        id: (new Date().getTime()),\r\n                        name: this.state.currentCategory,\r\n                        items:[]\r\n                    })\r\n                }).then(res => {\r\n                    \r\n                    return res.json();\r\n                })  \r\n                .then(data => {\r\n                    console.log(data);\r\n                    let oldComments = this.state.categories;\r\n                    console.log(oldComments);\r\n                    this.setState({categories:oldComments.concat(data),currentCategory:null});\r\n                }) \r\n                .catch(err => {\r\n                    console.log(err);\r\n                });\r\n               \r\n            }else{\r\n                return ;\r\n            }   \r\n    }\r\n\r\n    handleEdit= category =>{\r\n        let editedCategories= this.state.categories.filter (c => {\r\n            if(c.id==category.id){\r\n                    c.editing=true;\r\n            }\r\n            return c;\r\n        });\r\n        this.setState({categories:editedCategories});\r\n    }\r\n    handleEditItem= (item,categoryId) =>{\r\n        let editedCategories= this.state.categories.filter (c => {\r\n            if(c.id==categoryId){\r\n                c.items.filter(i => {\r\n                    if(i.id==item.id){\r\n                        i.editing=true;\r\n                    }\r\n                });\r\n            }\r\n            return c;\r\n        });\r\n        this.setState({categories:editedCategories});\r\n    }\r\n\r\n    handleSave= category =>{\r\n        let editedCategories= this.state.categories.filter (c => {\r\n            if(c.id==category.id){\r\n                    c.editing=false;\r\n            }\r\n            return c;\r\n        });\r\n        this.setState({categories:editedCategories});\r\n        axios.put(`https://my-json-server.typicode.com/Sara-AbdelAziz/data/categories/${category.id}`, category).then(response => {\r\n        })\r\n    }\r\n\r\n    handleSaveItem= (item,categoryId) =>{\r\n        let editedCategories= this.state.categories.filter (c => {\r\n            if(c.id==categoryId){\r\n                c.items.filter(i => {\r\n                    if(i.id==item.id){\r\n                        i.editing=false;\r\n                    }\r\n                });\r\n            }\r\n            return c;\r\n        });\r\n        this.setState({categories:editedCategories});\r\n        axios.put(`https://my-json-server.typicode.com/Sara-AbdelAziz/data/categories/${categoryId}?item.${item.id}`, item).then(response => {\r\n        })\r\n    }\r\n\r\n\r\n    handleChangeCategory= (e,category)=> {\r\n        category.name=e.target.value;\r\n        let editedCategories= this.state.categories.filter (c => {\r\n            if(c.id==category.id){\r\n                    c.name=e.target.value;\r\n            }\r\n            return c;\r\n        });\r\n        this.setState({categories:editedCategories});\r\n    }\r\n\r\n    handleChangeItem =(e,item,type,categoryId)=>{\r\n        console.log(type);\r\n        if(type==\"name\"){\r\n            item.name=e.target.value;\r\n        }\r\n        let editedCategories= this.state.categories.filter (c => {\r\n            if(c.id==categoryId){\r\n                    c.items.filter(i => {\r\n                        if(i.id==item.id){\r\n                            if(type==\"name\"){\r\n                                i.name=e.target.value;\r\n                            }else if(type==\"description\"){\r\n                                i.description=e.target.value;\r\n                            }else if(type==\"price\"){\r\n                                i.price=e.target.value;\r\n                            }\r\n                        }\r\n                    });\r\n            }\r\n            return c;\r\n        });\r\n        this.setState({categories:editedCategories});\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        \r\n        return (\r\n        <div>\r\n            <form name=\"categoryForm\" onSubmit={this.handleSubmit}>\r\n                <label>\r\n                    <input type=\"text\" name=\"name\" onChange={this.handleChange}/>\r\n                </label>\r\n                <button type=\"submit\">Add Category</button>\r\n            </form>\r\n            <div  className=\"categories accordion\" id=\"accordionExample\"> \r\n            \r\n            \r\n                <Category editing={this.state.editing}\r\n                 categories={this.state.categories}\r\n                 onEdit={this.handleEdit} \r\n                 onSave={this.handleSave} \r\n                 onSaveItem={this.handleSaveItem}\r\n                 onEditItem={this.handleEditItem}\r\n                 onChangeCategory={this.handleChangeCategory}\r\n                 onChangeItem={this.handleChangeItem} />\r\n                 \r\n            </div>\r\n         </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Categories;","import React, { Component } from 'react';\nimport Categories  from './Categories';\nimport '../styles/App.css';\n\nclass App extends Component {\n  \n  render() {\n    return (\n      <div className=\"container\">\n        <Categories />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport '../node_modules/jquery/dist/jquery.min.js';\nimport '../node_modules/bootstrap/dist/js/bootstrap.min.js';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}